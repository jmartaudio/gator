// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_posts_for_user.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getPostForUser = `-- name: GetPostForUser :many
SELECT 
    id,
    created_at,
    updated_at,
    title,
    url,
    description,
    published_at,
    feed_id
FROM posts
WHERE feed_id = $1
ORDER BY updated_at ASC
LIMIT $2
`

type GetPostForUserParams struct {
	FeedID uuid.UUID
	Limit  int32
}

func (q *Queries) GetPostForUser(ctx context.Context, arg GetPostForUserParams) ([]Post, error) {
	rows, err := q.db.QueryContext(ctx, getPostForUser, arg.FeedID, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Post
	for rows.Next() {
		var i Post
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Title,
			&i.Url,
			&i.Description,
			&i.PublishedAt,
			&i.FeedID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
