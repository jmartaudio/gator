// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_feeds.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getFeeds = `-- name: GetFeeds :many
SELECT name, url FROM feeds WHERE user_id = $1
ORDER BY name ASC
`

type GetFeedsRow struct {
	Name string
	Url  string
}

func (q *Queries) GetFeeds(ctx context.Context, userID uuid.UUID) ([]GetFeedsRow, error) {
	rows, err := q.db.QueryContext(ctx, getFeeds, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetFeedsRow
	for rows.Next() {
		var i GetFeedsRow
		if err := rows.Scan(&i.Name, &i.Url); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
